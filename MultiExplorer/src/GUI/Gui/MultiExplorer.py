#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    May 13, 2022 03:51:56 PM UTC  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import MultiExplorer_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    MultiExplorer_support.set_Tk_var()
    top = TelaInicial (root)
    MultiExplorer_support.init(root, top)
    root.mainloop()

w = None
def create_TelaInicial(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_TelaInicial(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    MultiExplorer_support.set_Tk_var()
    top = TelaInicial (w)
    MultiExplorer_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_TelaInicial():
    global w
    w.destroy()
    w = None

class TelaInicial:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("629x439+1972+266")
        top.minsize(1, 1)
        top.maxsize(3825, 1055)
        top.resizable(1,  1)
        top.title("MultiExplorer")
        top.configure(highlightcolor="black")

        self.Label_Execution = tk.LabelFrame(top)
        self.Label_Execution.place(relx=0.134, rely=0.421, relheight=0.169
                , relwidth=0.717)
        self.Label_Execution.configure(relief='groove')
        self.Label_Execution.configure(text='''Execution Flow''')

        self.Button_fluxoDeExe = tk.Button(self.Label_Execution)
        self.Button_fluxoDeExe.place(relx=0.599, rely=0.405, height=33, width=55
                , bordermode='ignore')
        self.Button_fluxoDeExe.configure(activebackground="#f9f9f9")
        self.Button_fluxoDeExe.configure(borderwidth="2")
        self.Button_fluxoDeExe.configure(text='''Run''')

        self.Combobox_ExecutionFlow = ttk.Combobox(self.Label_Execution)
        self.Combobox_ExecutionFlow.place(relx=0.177, rely=0.405, relheight=0.405
                , relwidth=0.392, bordermode='ignore')
        self.value_list = ['Gpu','Cpu','Outros',]
        self.Combobox_ExecutionFlow.configure(values=self.value_list)
        self.Combobox_ExecutionFlow.configure(textvariable=MultiExplorer_support.combobox)
        self.Combobox_ExecutionFlow.configure(takefocus="")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,
                tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                label="Menu")
        self.sub_menu.add_command(
                label="Settings")
        self.sub_menu.add_command(
                label="Import")
        self.sub_menu1 = tk.Menu(top,
                tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu1,
                label="Tools")

        self.Image_ME = tk.Label(top)
        self.Image_ME.place(relx=0.302, rely=0.043, height=138, width=239)
        self.Image_ME.configure(activebackground="#f9f9f9")
        self.Image_ME.configure(text='''MultiExplorer.png''')

if __name__ == '__main__':
    vp_start_gui()





