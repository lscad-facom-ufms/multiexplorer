#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    May 15, 2022 11:31:42 PM UTC  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import executing_GPGPUsim_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    #executing_GPGPUsim_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    #executing_GPGPUsim_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x450+449+125")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1,  1)
        top.title("MultiExplorer")
        top.configure(highlightcolor="black")

        self.GPGPUsim_LabelFrame_InputInfo = tk.LabelFrame(top)
        self.GPGPUsim_LabelFrame_InputInfo.place(relx=0.033, rely=0.089
                , relheight=0.322, relwidth=0.5)
        self.GPGPUsim_LabelFrame_InputInfo.configure(relief='groove')
        self.GPGPUsim_LabelFrame_InputInfo.configure(text='''Input Info''')

        self.GPGPUsim_buttom_VerMais = tk.Button(self.GPGPUsim_LabelFrame_InputInfo)
        self.GPGPUsim_buttom_VerMais.place(relx=0.7, rely=0.138, height=33
                , width=73, bordermode='ignore')
        self.GPGPUsim_buttom_VerMais.configure(activebackground="#f9f9f9")
        self.GPGPUsim_buttom_VerMais.configure(borderwidth="2")
        self.GPGPUsim_buttom_VerMais.configure(text='''Ver Mais''')

        self.GPGPUsim_buttom_Parar = tk.Button(top)
        self.GPGPUsim_buttom_Parar.place(relx=0.067, rely=0.889, height=33
                , width=73)
        self.GPGPUsim_buttom_Parar.configure(activebackground="#f9f9f9")
        self.GPGPUsim_buttom_Parar.configure(borderwidth="2")
        self.GPGPUsim_buttom_Parar.configure(text='''Parar''')

        self.GPGPUsim_buttom_executar = tk.Button(top)
        self.GPGPUsim_buttom_executar.place(relx=0.783, rely=0.889, height=33
                , width=73)
        self.GPGPUsim_buttom_executar.configure(activebackground="#f9f9f9")
        self.GPGPUsim_buttom_executar.configure(borderwidth="2")
        self.GPGPUsim_buttom_executar.configure(text='''Executar''')

        self.GPGPUsim_frame_GPGPUsim = tk.Frame(top)
        self.GPGPUsim_frame_GPGPUsim.place(relx=0.05, rely=0.467, relheight=0.211
                , relwidth=0.258)
        self.GPGPUsim_frame_GPGPUsim.configure(relief='groove')
        self.GPGPUsim_frame_GPGPUsim.configure(borderwidth="2")
        self.GPGPUsim_frame_GPGPUsim.configure(relief="groove")

        self.Label1 = tk.Label(self.GPGPUsim_frame_GPGPUsim)
        self.Label1.place(relx=0.194, rely=0.211, height=21, width=89)
        self.Label1.configure(text='''GPGPUsim''')

        self.GPGPUsim_Prgressbar_GPGPUsim = ttk.Progressbar(self.GPGPUsim_frame_GPGPUsim)
        self.GPGPUsim_Prgressbar_GPGPUsim.place(relx=0.194, rely=0.526
                , relwidth=0.645, relheight=0.0, height=19)

        self.GPGPUsim_Frame_DSE = tk.Frame(top)
        self.GPGPUsim_Frame_DSE.place(relx=0.383, rely=0.467, relheight=0.211
                , relwidth=0.275)
        self.GPGPUsim_Frame_DSE.configure(relief='groove')
        self.GPGPUsim_Frame_DSE.configure(borderwidth="2")
        self.GPGPUsim_Frame_DSE.configure(relief="groove")

        self.Label2 = tk.Label(self.GPGPUsim_Frame_DSE)
        self.Label2.place(relx=0.303, rely=0.211, height=21, width=50)
        self.Label2.configure(text='''DSE''')

        self.GPGPUsim_Progressbar_DSE = ttk.Progressbar(self.GPGPUsim_Frame_DSE)
        self.GPGPUsim_Progressbar_DSE.place(relx=0.182, rely=0.526
                , relwidth=0.606, relheight=0.0, height=19)

        self.GPGPUsim_buttom_VerResultadosGPGPUsim = tk.Button(top)
        self.GPGPUsim_buttom_VerResultadosGPGPUsim.place(relx=0.083, rely=0.689
                , height=33, width=113)
        self.GPGPUsim_buttom_VerResultadosGPGPUsim.configure(activebackground="#f9f9f9")
        self.GPGPUsim_buttom_VerResultadosGPGPUsim.configure(borderwidth="2")
        self.GPGPUsim_buttom_VerResultadosGPGPUsim.configure(text='''Ver Resultados''')

        self.GPGPUsim_buttom_VerResultadosDSE = tk.Button(top)
        self.GPGPUsim_buttom_VerResultadosDSE.place(relx=0.417, rely=0.689
                , height=33, width=123)
        self.GPGPUsim_buttom_VerResultadosDSE.configure(activebackground="#f9f9f9")
        self.GPGPUsim_buttom_VerResultadosDSE.configure(borderwidth="2")
        self.GPGPUsim_buttom_VerResultadosDSE.configure(text='''Ver Resultados''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.GPGPUsim_buttom_inicio = tk.Button(top)
        self.GPGPUsim_buttom_inicio.place(relx=0.033, rely=0.0, height=33
                , width=65)
        self.GPGPUsim_buttom_inicio.configure(borderwidth="2")
        self.GPGPUsim_buttom_inicio.configure(text='''in√≠cio''')

if __name__ == '__main__':
    vp_start_gui()





